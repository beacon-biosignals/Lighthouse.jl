name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - Makie - ${{ matrix.makie }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - '1.7'
          - '1.6'
        os:
          - ubuntu-latest
        arch:
          - x64
        makie:
            - '0.20'
    env:
      JULIA_NUM_THREADS: 2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v2
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-artifacts-${{ hashFiles('**/Project.toml') }}
          restore-keys: ${{ runner.os }}-test-artifacts
      - name: "Install Makie and instantiate project"
        shell: julia --color=yes --project {0}
        run: |
          using Pkg
          Pkg.develop(Pkg.PackageSpec(; name="Makie", version="${{ matrix.makie }}"))
          Pkg.instantiate()
      - uses: julia-actions/julia-runtest@v1
      - name: Percy Upload
        uses: percy/exec-action@v0.3.1
        if: ${{ matrix.version == 1 && matrix.makie == 0.20 }}
        with:
          custom-command: "npx @percy/cli upload ./test/plot_results"
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
